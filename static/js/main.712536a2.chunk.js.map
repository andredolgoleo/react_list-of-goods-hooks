{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortType","setSortType","isReversed","setIsReversed","sortedGoods","goods","visiableGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","handlerOnClick","typeOfSort","prevState","className","type","onClick","classNames","event","currentTarget","innerHTML","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAoCE,IAAME,EAAgB,WAC3B,MAAgCC,mBAASH,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KAEMC,EA7BR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,SAAUE,EACZ,EADYA,WAENI,EAAa,YAAOD,GAkB1B,OAhBAC,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAML,EAASe,QACb,OAAOF,EAAEG,cAAcF,GAEzB,KAAMd,EAASiB,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QAAS,OAAO,MAIhBX,GACFI,EAAcQ,UAGTR,EAOaS,CAClBnB,EACA,CAAEI,WAAUE,eAGRc,EAAiB,SAACC,GACtB,OAAQA,GACN,KAAKtB,EAASe,QACZ,OAAOT,EAAYN,EAASe,SAE9B,KAAKf,EAASiB,OACZ,OAAOX,EAAYN,EAASiB,QAE9B,IAAK,UACH,OAAOT,GAAc,SAAAe,GAAS,OAAKA,KAErC,IAAK,QACH,OACEjB,EAAYN,EAASI,MACrBI,GAAc,GAElB,QAAS,OAAO,IAIpB,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,WACPL,EAAerB,EAASe,UAE1BS,UAAWG,IACT,SACA,UACAtB,IAAaL,EAASe,SAAW,YARrC,iCAcA,wBACEU,KAAK,SACLC,QAAS,WACPL,EAAerB,EAASiB,SAE1BO,UAAWG,IACT,SACA,UACAtB,IAAaL,EAASiB,QAAU,YARpC,4BAcA,wBACEQ,KAAK,SACLC,QAAS,SAAAE,GACPP,EAAeO,EAAMC,cAAcC,YAErCN,UAAWG,IACT,SACA,WACCpB,GAAc,YARnB,sBAcEA,GAAcF,IAAaL,EAASI,OAElC,wBACEqB,KAAK,SACLC,QAAS,SAAAE,GACPP,EAAeO,EAAMC,cAAcC,YAErCN,UAAU,4BALZ,sBAYN,6BACGf,EAAYsB,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7IlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.712536a2.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOption = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOption,\n) {\n  const visiableGoods = [...goods];\n\n  visiableGoods.sort((a, b) => {\n    switch (sortType) {\n      case (SortType.ALPABET):\n        return a.localeCompare(b);\n\n      case (SortType.LENGTH):\n        return a.length - b.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visiableGoods.reverse();\n  }\n\n  return visiableGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const sortedGoods = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  const handlerOnClick = (typeOfSort: number | string) => {\n    switch (typeOfSort) {\n      case SortType.ALPABET:\n        return setSortType(SortType.ALPABET);\n\n      case SortType.LENGTH:\n        return setSortType(SortType.LENGTH);\n\n      case 'Reverse':\n        return setIsReversed(prevState => !prevState);\n\n      case 'Reset':\n        return (\n          setSortType(SortType.NONE),\n          setIsReversed(false)\n        );\n      default: return 0;\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            handlerOnClick(SortType.ALPABET);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            sortType !== SortType.ALPABET && 'is-light',\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            handlerOnClick(SortType.LENGTH);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            sortType !== SortType.LENGTH && 'is-light',\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={event => {\n            handlerOnClick(event.currentTarget.innerHTML);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            !isReversed && 'is-light',\n          )}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortType !== SortType.NONE)\n          && (\n            <button\n              type=\"button\"\n              onClick={event => {\n                handlerOnClick(event.currentTarget.innerHTML);\n              }}\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}