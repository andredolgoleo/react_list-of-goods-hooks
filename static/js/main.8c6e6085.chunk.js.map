{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visiableGoods","sort","a","b","ALPABET","localeCompare","LENGTH","length","reverse","App","useState","NONE","setSortType","setIsReversed","handlerOnClick","nameOfSort","prevState","className","type","onClick","event","currentTarget","innerHTML","classNames","style","display","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcF,SAASC,EACPC,EADF,GAGG,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAa,YAAOH,GAkB1B,OAhBAG,EAAcC,MAAK,SAACC,EAAGC,GACrB,OAAQL,GACN,KAAMJ,EAASU,QACb,OAAOF,EAAEG,cAAcF,GAEzB,KAAMT,EAASY,OACb,OAAOJ,EAAEK,OAASJ,EAAEI,OAEtB,QAAS,OAAO,MAIhBR,GACFC,EAAcQ,UAGTR,G,SAjCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAoCE,IAAMe,EAAgB,WAC3B,MAAgCC,mBAAShB,EAASiB,MAAlD,mBAAOb,EAAP,KAAiBc,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOX,EAAP,KAAmBc,EAAnB,KAEMC,EAAiB,SAACC,GACtB,OAAQA,GACN,IAAK,sBACH,OAAOH,EAAYlB,EAASU,SAE9B,IAAK,iBACH,OAAOQ,EAAYlB,EAASY,QAE9B,IAAK,UACH,OAAOO,GAAc,SAAAG,GAAS,OAAKA,KAErC,IAAK,QACH,OACEJ,EAAYlB,EAASiB,MACrBE,GAAc,GAElB,QAAS,OAAO,IAIpB,OACE,sBAAKI,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAAS,SAAAC,GACPN,EAAeM,EAAMC,cAAcC,YAErCL,UAAWM,IACT,SACA,UACAzB,IAAaJ,EAASU,SAAW,YARrC,iCAcA,wBACEc,KAAK,SACLC,QAAS,SAAAC,GACPN,EAAeM,EAAMC,cAAcC,YAErCL,UAAWM,IACT,SACA,UACAzB,IAAaJ,EAASY,QAAU,YARpC,4BAcA,wBACEY,KAAK,SACLC,QAAS,SAAAC,GACPN,EAAeM,EAAMC,cAAcC,YAErCL,UAAWM,IACT,SACA,WACCxB,GAAc,YARnB,qBAcA,wBACEmB,KAAK,SACLM,MAAO,CACLC,QAAU1B,GAAcD,IAAaJ,EAASiB,KAC1C,QACA,QAENQ,QAAS,SAAAC,GACPN,EAAeM,EAAMC,cAAcC,YAErCL,UAAU,4BAVZ,sBAgBF,6BACGrB,EACCD,EACA,CAAEG,WAAUC,eACZ2B,KAAI,SAAAC,GAAI,OACR,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC7IlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c6e6085.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOption = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nfunction getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOption,\n) {\n  const visiableGoods = [...goods];\n\n  visiableGoods.sort((a, b) => {\n    switch (sortType) {\n      case (SortType.ALPABET):\n        return a.localeCompare(b);\n\n      case (SortType.LENGTH):\n        return a.length - b.length;\n\n      default: return 0;\n    }\n  });\n\n  if (isReversed) {\n    visiableGoods.reverse();\n  }\n\n  return visiableGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handlerOnClick = (nameOfSort: string) => {\n    switch (nameOfSort) {\n      case 'Sort alphabetically':\n        return setSortType(SortType.ALPABET);\n\n      case 'Sort by length':\n        return setSortType(SortType.LENGTH);\n\n      case 'Reverse':\n        return setIsReversed(prevState => !prevState);\n\n      case 'Reset':\n        return (\n          setSortType(SortType.NONE),\n          setIsReversed(false)\n        );\n      default: return 0;\n    }\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={event => {\n            handlerOnClick(event.currentTarget.innerHTML);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            sortType !== SortType.ALPABET && 'is-light',\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={event => {\n            handlerOnClick(event.currentTarget.innerHTML);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            sortType !== SortType.LENGTH && 'is-light',\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={event => {\n            handlerOnClick(event.currentTarget.innerHTML);\n          }}\n          className={classNames(\n            'button',\n            'is-info',\n            !isReversed && 'is-light',\n          )}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          style={{\n            display: (isReversed || sortType !== SortType.NONE)\n              ? 'block'\n              : 'none',\n          }}\n          onClick={event => {\n            handlerOnClick(event.currentTarget.innerHTML);\n          }}\n          className=\"button is-danger is-light\"\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {getReorderedGoods(\n          goodsFromServer,\n          { sortType, isReversed },\n        ).map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}